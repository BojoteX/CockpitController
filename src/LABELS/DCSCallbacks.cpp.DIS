/*
 * DCSCallbacks.cpp
 * Auto-generated callbacks and DCS-BIOS buffer declarations
 */

#include "DcsBios.h"

// -------- LED Callbacks --------

void onLEDChange_CLIP_APU_ACC_LT(unsigned int newValue) { setLED("CLIP_APU_ACC_LT", newValue); }
void onLEDChange_CLIP_BATT_SW_LT(unsigned int newValue) { setLED("CLIP_BATT_SW_LT", newValue); }
void onLEDChange_CLIP_CK_SEAT_LT(unsigned int newValue) { setLED("CLIP_CK_SEAT_LT", newValue); }
void onLEDChange_CLIP_FCES_LT(unsigned int newValue) { setLED("CLIP_FCES_LT", newValue); }
void onLEDChange_CLIP_FCS_HOT_LT(unsigned int newValue) { setLED("CLIP_FCS_HOT_LT", newValue); }
void onLEDChange_CLIP_FUEL_LO_LT(unsigned int newValue) { setLED("CLIP_FUEL_LO_LT", newValue); }
void onLEDChange_CLIP_GEN_TIE_LT(unsigned int newValue) { setLED("CLIP_GEN_TIE_LT", newValue); }
void onLEDChange_CLIP_L_GEN_LT(unsigned int newValue) { setLED("CLIP_L_GEN_LT", newValue); }
void onLEDChange_CLIP_R_GEN_LT(unsigned int newValue) { setLED("CLIP_R_GEN_LT", newValue); }
void onLEDChange_CLIP_SPARE_CTN1_LT(unsigned int newValue) { setLED("CLIP_SPARE_CTN1_LT", newValue); }
void onLEDChange_CLIP_SPARE_CTN2_LT(unsigned int newValue) { setLED("CLIP_SPARE_CTN2_LT", newValue); }
void onLEDChange_CLIP_SPARE_CTN3_LT(unsigned int newValue) { setLED("CLIP_SPARE_CTN3_LT", newValue); }
void onLEDChange_CMSD_JET_SEL_L(unsigned int newValue) { setLED("CMSD_JET_SEL_L", newValue); }
void onLEDChange_LH_ADV_ASPJ_OH(unsigned int newValue) { setLED("LH_ADV_ASPJ_OH", newValue); }
void onLEDChange_LH_ADV_GO(unsigned int newValue) { setLED("LH_ADV_GO", newValue); }
void onLEDChange_LH_ADV_L_BAR_GREEN(unsigned int newValue) { setLED("LH_ADV_L_BAR_GREEN", newValue); }
void onLEDChange_LH_ADV_L_BAR_RED(unsigned int newValue) { setLED("LH_ADV_L_BAR_RED", newValue); }
void onLEDChange_LH_ADV_L_BLEED(unsigned int newValue) { setLED("LH_ADV_L_BLEED", newValue); }
void onLEDChange_LH_ADV_NO_GO(unsigned int newValue) { setLED("LH_ADV_NO_GO", newValue); }
void onLEDChange_LH_ADV_REC(unsigned int newValue) { setLED("LH_ADV_REC", newValue); }
void onLEDChange_LH_ADV_R_BLEED(unsigned int newValue) { setLED("LH_ADV_R_BLEED", newValue); }
void onLEDChange_LH_ADV_SPD_BRK(unsigned int newValue) { setLED("LH_ADV_SPD_BRK", newValue); }
void onLEDChange_LH_ADV_STBY(unsigned int newValue) { setLED("LH_ADV_STBY", newValue); }
void onLEDChange_LH_ADV_XMIT(unsigned int newValue) { setLED("LH_ADV_XMIT", newValue); }
void onLEDChange_FIRE_LEFT_LT(unsigned int newValue) { setLED("FIRE_LEFT_LT", newValue); }
void onLEDChange_LS_LOCK(unsigned int newValue) { setLED("LS_LOCK", newValue); }
void onLEDChange_LS_SHOOT(unsigned int newValue) { setLED("LS_SHOOT", newValue); }
void onLEDChange_LS_SHOOT_STROBE(unsigned int newValue) { setLED("LS_SHOOT_STROBE", newValue); }
void onLEDChange_SPIN_LT(unsigned int newValue) { setLED("SPIN_LT", newValue); }
void onLEDChange_MASTER_MODE_AA_LT(unsigned int newValue) { setLED("MASTER_MODE_AA_LT", newValue); }
void onLEDChange_MASTER_MODE_AG_LT(unsigned int newValue) { setLED("MASTER_MODE_AG_LT", newValue); }
void onLEDChange_MC_DISCH(unsigned int newValue) { setLED("MC_DISCH", newValue); }
void onLEDChange_MC_READY(unsigned int newValue) { setLED("MC_READY", newValue); }
void onLEDChange_MASTER_CAUTION_LT(unsigned int newValue) { setLED("MASTER_CAUTION_LT", newValue); }
void onLEDChange_RH_ADV_AAA(unsigned int newValue) { setLED("RH_ADV_AAA", newValue); }
void onLEDChange_RH_ADV_AI(unsigned int newValue) { setLED("RH_ADV_AI", newValue); }
void onLEDChange_RH_ADV_CW(unsigned int newValue) { setLED("RH_ADV_CW", newValue); }
void onLEDChange_RH_ADV_DISP(unsigned int newValue) { setLED("RH_ADV_DISP", newValue); }
void onLEDChange_RH_ADV_RCDR_ON(unsigned int newValue) { setLED("RH_ADV_RCDR_ON", newValue); }
void onLEDChange_RH_ADV_SAM(unsigned int newValue) { setLED("RH_ADV_SAM", newValue); }
void onLEDChange_RH_ADV_SPARE_RH1(unsigned int newValue) { setLED("RH_ADV_SPARE_RH1", newValue); }
void onLEDChange_RH_ADV_SPARE_RH2(unsigned int newValue) { setLED("RH_ADV_SPARE_RH2", newValue); }
void onLEDChange_RH_ADV_SPARE_RH3(unsigned int newValue) { setLED("RH_ADV_SPARE_RH3", newValue); }
void onLEDChange_RH_ADV_SPARE_RH4(unsigned int newValue) { setLED("RH_ADV_SPARE_RH4", newValue); }
void onLEDChange_RH_ADV_SPARE_RH5(unsigned int newValue) { setLED("RH_ADV_SPARE_RH5", newValue); }
void onLEDChange_FIRE_RIGHT_LT(unsigned int newValue) { setLED("FIRE_RIGHT_LT", newValue); }

// -------- LED DCS-BIOS Buffer Declarations --------

DcsBios::IntegerBuffer CLIP_APU_ACC_LT_Buffer(0x74a4, 0x100, 8, onLEDChange_CLIP_APU_ACC_LT);
DcsBios::IntegerBuffer CLIP_BATT_SW_LT_Buffer(0x74a4, 0x200, 9, onLEDChange_CLIP_BATT_SW_LT);
DcsBios::IntegerBuffer CLIP_CK_SEAT_LT_Buffer(0x74a0, 0x8000, 15, onLEDChange_CLIP_CK_SEAT_LT);
DcsBios::IntegerBuffer CLIP_FCES_LT_Buffer(0x74a4, 0x4000, 14, onLEDChange_CLIP_FCES_LT);
DcsBios::IntegerBuffer CLIP_FCS_HOT_LT_Buffer(0x74a4, 0x400, 10, onLEDChange_CLIP_FCS_HOT_LT);
DcsBios::IntegerBuffer CLIP_FUEL_LO_LT_Buffer(0x74a4, 0x2000, 13, onLEDChange_CLIP_FUEL_LO_LT);
DcsBios::IntegerBuffer CLIP_GEN_TIE_LT_Buffer(0x74a4, 0x800, 11, onLEDChange_CLIP_GEN_TIE_LT);
DcsBios::IntegerBuffer CLIP_L_GEN_LT_Buffer(0x74a8, 0x100, 8, onLEDChange_CLIP_L_GEN_LT);
DcsBios::IntegerBuffer CLIP_R_GEN_LT_Buffer(0x74a8, 0x200, 9, onLEDChange_CLIP_R_GEN_LT);
DcsBios::IntegerBuffer CLIP_SPARE_CTN1_LT_Buffer(0x74a4, 0x1000, 12, onLEDChange_CLIP_SPARE_CTN1_LT);
DcsBios::IntegerBuffer CLIP_SPARE_CTN2_LT_Buffer(0x74a4, 0x8000, 15, onLEDChange_CLIP_SPARE_CTN2_LT);
DcsBios::IntegerBuffer CLIP_SPARE_CTN3_LT_Buffer(0x74a8, 0x400, 10, onLEDChange_CLIP_SPARE_CTN3_LT);
DcsBios::IntegerBuffer CMSD_JET_SEL_L_Buffer(0x74d4, 0x8000, 15, onLEDChange_CMSD_JET_SEL_L);
DcsBios::IntegerBuffer LH_ADV_ASPJ_OH_Buffer(0x740a, 0x8, 3, onLEDChange_LH_ADV_ASPJ_OH);
DcsBios::IntegerBuffer LH_ADV_GO_Buffer(0x740a, 0x10, 4, onLEDChange_LH_ADV_GO);
DcsBios::IntegerBuffer LH_ADV_L_BAR_GREEN_Buffer(0x740a, 0x2, 1, onLEDChange_LH_ADV_L_BAR_GREEN);
DcsBios::IntegerBuffer LH_ADV_L_BAR_RED_Buffer(0x7408, 0x8000, 15, onLEDChange_LH_ADV_L_BAR_RED);
DcsBios::IntegerBuffer LH_ADV_L_BLEED_Buffer(0x7408, 0x800, 11, onLEDChange_LH_ADV_L_BLEED);
DcsBios::IntegerBuffer LH_ADV_NO_GO_Buffer(0x740a, 0x20, 5, onLEDChange_LH_ADV_NO_GO);
DcsBios::IntegerBuffer LH_ADV_REC_Buffer(0x740a, 0x1, 0, onLEDChange_LH_ADV_REC);
DcsBios::IntegerBuffer LH_ADV_R_BLEED_Buffer(0x7408, 0x1000, 12, onLEDChange_LH_ADV_R_BLEED);
DcsBios::IntegerBuffer LH_ADV_SPD_BRK_Buffer(0x7408, 0x2000, 13, onLEDChange_LH_ADV_SPD_BRK);
DcsBios::IntegerBuffer LH_ADV_STBY_Buffer(0x7408, 0x4000, 14, onLEDChange_LH_ADV_STBY);
DcsBios::IntegerBuffer LH_ADV_XMIT_Buffer(0x740a, 0x4, 2, onLEDChange_LH_ADV_XMIT);
DcsBios::IntegerBuffer FIRE_LEFT_LT_Buffer(0x7408, 0x40, 6, onLEDChange_FIRE_LEFT_LT);
DcsBios::IntegerBuffer LS_LOCK_Buffer(0x7408, 0x1, 0, onLEDChange_LS_LOCK);
DcsBios::IntegerBuffer LS_SHOOT_Buffer(0x7408, 0x2, 1, onLEDChange_LS_SHOOT);
DcsBios::IntegerBuffer LS_SHOOT_STROBE_Buffer(0x7408, 0x4, 2, onLEDChange_LS_SHOOT_STROBE);
DcsBios::IntegerBuffer SPIN_LT_Buffer(0x742a, 0x800, 11, onLEDChange_SPIN_LT);
DcsBios::IntegerBuffer MASTER_MODE_AA_LT_Buffer(0x740c, 0x200, 9, onLEDChange_MASTER_MODE_AA_LT);
DcsBios::IntegerBuffer MASTER_MODE_AG_LT_Buffer(0x740c, 0x400, 10, onLEDChange_MASTER_MODE_AG_LT);
DcsBios::IntegerBuffer MC_DISCH_Buffer(0x740c, 0x4000, 14, onLEDChange_MC_DISCH);
DcsBios::IntegerBuffer MC_READY_Buffer(0x740c, 0x8000, 15, onLEDChange_MC_READY);
DcsBios::IntegerBuffer MASTER_CAUTION_LT_Buffer(0x7408, 0x200, 9, onLEDChange_MASTER_CAUTION_LT);
DcsBios::IntegerBuffer RH_ADV_AAA_Buffer(0x740a, 0x800, 11, onLEDChange_RH_ADV_AAA);
DcsBios::IntegerBuffer RH_ADV_AI_Buffer(0x740a, 0x400, 10, onLEDChange_RH_ADV_AI);
DcsBios::IntegerBuffer RH_ADV_CW_Buffer(0x740a, 0x1000, 12, onLEDChange_RH_ADV_CW);
DcsBios::IntegerBuffer RH_ADV_DISP_Buffer(0x740a, 0x100, 8, onLEDChange_RH_ADV_DISP);
DcsBios::IntegerBuffer RH_ADV_RCDR_ON_Buffer(0x740a, 0x80, 7, onLEDChange_RH_ADV_RCDR_ON);
DcsBios::IntegerBuffer RH_ADV_SAM_Buffer(0x740a, 0x200, 9, onLEDChange_RH_ADV_SAM);
DcsBios::IntegerBuffer RH_ADV_SPARE_RH1_Buffer(0x740a, 0x2000, 13, onLEDChange_RH_ADV_SPARE_RH1);
DcsBios::IntegerBuffer RH_ADV_SPARE_RH2_Buffer(0x740a, 0x4000, 14, onLEDChange_RH_ADV_SPARE_RH2);
DcsBios::IntegerBuffer RH_ADV_SPARE_RH3_Buffer(0x740a, 0x8000, 15, onLEDChange_RH_ADV_SPARE_RH3);
DcsBios::IntegerBuffer RH_ADV_SPARE_RH4_Buffer(0x740c, 0x1, 0, onLEDChange_RH_ADV_SPARE_RH4);
DcsBios::IntegerBuffer RH_ADV_SPARE_RH5_Buffer(0x740c, 0x2, 1, onLEDChange_RH_ADV_SPARE_RH5);
DcsBios::IntegerBuffer FIRE_RIGHT_LT_Buffer(0x740c, 0x10, 4, onLEDChange_FIRE_RIGHT_LT);

// -------- Selector Callbacks --------

void onSelectorChange_AUX_REL_SW(unsigned int newValue) { setSelector("AUX_REL_SW", newValue); }
void onSelectorChange_CMSD_DISPENSE_SW(unsigned int newValue) { setSelector("CMSD_DISPENSE_SW", newValue); }
void onSelectorChange_CMSD_JET_SEL_BTN(unsigned int newValue) { setSelector("CMSD_JET_SEL_BTN", newValue); }
void onSelectorChange_ECM_MODE_SW(unsigned int newValue) { setSelector("ECM_MODE_SW", newValue); }
void onSelectorChange_LEFT_FIRE_BTN(unsigned int newValue) { setSelector("LEFT_FIRE_BTN", newValue); }
void onSelectorChange_LEFT_FIRE_BTN_COVER(unsigned int newValue) { setSelector("LEFT_FIRE_BTN_COVER", newValue); }
void onSelectorChange_IR_COOL_SW(unsigned int newValue) { setSelector("IR_COOL_SW", newValue); }
void onSelectorChange_SPIN_RECOVERY_COVER(unsigned int newValue) { setSelector("SPIN_RECOVERY_COVER", newValue); }
void onSelectorChange_SPIN_RECOVERY_SW(unsigned int newValue) { setSelector("SPIN_RECOVERY_SW", newValue); }
void onSelectorChange_MASTER_ARM_SW(unsigned int newValue) { setSelector("MASTER_ARM_SW", newValue); }
void onSelectorChange_MASTER_MODE_AA(unsigned int newValue) { setSelector("MASTER_MODE_AA", newValue); }
void onSelectorChange_MASTER_MODE_AG(unsigned int newValue) { setSelector("MASTER_MODE_AG", newValue); }
void onSelectorChange_MASTER_CAUTION_RESET_SW(unsigned int newValue) { setSelector("MASTER_CAUTION_RESET_SW", newValue); }
void onSelectorChange_RIGHT_FIRE_BTN(unsigned int newValue) { setSelector("RIGHT_FIRE_BTN", newValue); }
void onSelectorChange_RIGHT_FIRE_BTN_COVER(unsigned int newValue) { setSelector("RIGHT_FIRE_BTN_COVER", newValue); }

// -------- Selector DCS-BIOS Buffer Declarations --------

DcsBios::IntegerBuffer AUX_REL_SW_Buffer(0x7488, 0x800, 11, onSelectorChange_AUX_REL_SW);
DcsBios::IntegerBuffer CMSD_DISPENSE_SW_Buffer(0x7484, 0x6000, 13, onSelectorChange_CMSD_DISPENSE_SW);
DcsBios::IntegerBuffer CMSD_JET_SEL_BTN_Buffer(0x7484, 0x8000, 15, onSelectorChange_CMSD_JET_SEL_BTN);
DcsBios::IntegerBuffer ECM_MODE_SW_Buffer(0x7488, 0x700, 8, onSelectorChange_ECM_MODE_SW);
DcsBios::IntegerBuffer LEFT_FIRE_BTN_Buffer(0x7408, 0x80, 7, onSelectorChange_LEFT_FIRE_BTN);
DcsBios::IntegerBuffer LEFT_FIRE_BTN_COVER_Buffer(0x7408, 0x100, 8, onSelectorChange_LEFT_FIRE_BTN_COVER);
DcsBios::IntegerBuffer IR_COOL_SW_Buffer(0x742a, 0xc000, 14, onSelectorChange_IR_COOL_SW);
DcsBios::IntegerBuffer SPIN_RECOVERY_COVER_Buffer(0x742a, 0x1000, 12, onSelectorChange_SPIN_RECOVERY_COVER);
DcsBios::IntegerBuffer SPIN_RECOVERY_SW_Buffer(0x742a, 0x2000, 13, onSelectorChange_SPIN_RECOVERY_SW);
DcsBios::IntegerBuffer MASTER_ARM_SW_Buffer(0x740c, 0x2000, 13, onSelectorChange_MASTER_ARM_SW);
DcsBios::IntegerBuffer MASTER_MODE_AA_Buffer(0x740c, 0x800, 11, onSelectorChange_MASTER_MODE_AA);
DcsBios::IntegerBuffer MASTER_MODE_AG_Buffer(0x740c, 0x1000, 12, onSelectorChange_MASTER_MODE_AG);
DcsBios::IntegerBuffer MASTER_CAUTION_RESET_SW_Buffer(0x7408, 0x400, 10, onSelectorChange_MASTER_CAUTION_RESET_SW);
DcsBios::IntegerBuffer RIGHT_FIRE_BTN_Buffer(0x740c, 0x20, 5, onSelectorChange_RIGHT_FIRE_BTN);
DcsBios::IntegerBuffer RIGHT_FIRE_BTN_COVER_Buffer(0x740c, 0x40, 6, onSelectorChange_RIGHT_FIRE_BTN_COVER);

/*
 * -------- Enhanced Selector Option Information (from Lua Definitions) --------
 *
 * CMSD_DISPENSE_SW:
 *   Positions: 0 = 0, 1 = 1, 2 = 2
 *
 * ECM_MODE_SW:
 *   Positions: 0 = 0, 1 = 1, 2 = 2, 3 = 3, 4 = 4
 *
 * IR_COOL_SW:
 *   Positions: 0 = 0, 1 = 1, 2 = 2
 */
